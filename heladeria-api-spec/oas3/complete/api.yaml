openapi: 3.0.0
info:
  description: |
    API de la Heladería Via Apilia. A través de esta API se pueden consultar
    los gustos de helado, realizar pedidos, administrar repartidores, sus vehículos y asignarles pedidos.
  version: "2.0.0"
  title: Heladería Via Apilia (Reload)
  contact:
    email: devs@heladeria-apilia.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://api.heladeria-apilia.com'
paths:
  /gustos:
    get:
      description: Listar los gustos de helado
      parameters:
      - in: query
        name: tipo
        required: false
        schema:
          $ref: '#/components/schemas/TipoDeGusto'
      responses:
        '200':
          description: Estos son los gustos de helado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gusto'
  /gustos/{gustoId}:
    get:
      description: Ver un gusto particular
      parameters:
      - $ref: '#/components/parameters/gustoId'
      responses:
        '200':
          description: El gusto seleccionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gusto'
        '404':
          description: No se conoce un gusto con tal id
  /pedidos:
    post:
      description: Crear un nuevo pedido a la dirección indicada
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                direccion_entrega:
                  type: string
                  description: dirección en la que se ha de entregar este pedido
              required: [direccion_entrega]
      responses:
        '201':
          description: El pedido ha sido creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
  /pedidos/{pedidoId}:
    get:
      description: Ver un pedido particular
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      responses:
        '200':
          description: El pedido ha sido hallado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
        '404':
          description: No se conoce un pedido con tal id
    put:
      description: Cambiar los datos de un pedido particular
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pedido'
      responses:
        '200':
          description: El pedido ha sido actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  direccion_entrega:
                    type: string
                    description: dirección en la que se ha de entregar este pedido
                required: [direccion_entrega]
        '404':
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/potes:
    get:
      description: Lista los potes que componen un pedido
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      responses:
        '200':
          description: Los potes del pedido
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Pote'
        '404':
          description: No se conoce un pedido con tal id
    post:
      description: Agrega un pote a un pedido
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                peso:
                  $ref: '#/components/schemas/PesoDePote'
                gustos:
                  type: array
                  items:
                    type: string
                  description: los gustos de helado en este pote
                  example: [ddl, pist]
              required: [peso, gustos]
      responses:
        '201':
          description: El pote fue agregado al pedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pote'
        '404':
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/potes/{poteId}:
    delete:
      description: quitar un pote de un pedido
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      - $ref: '#/components/parameters/poteId'
      responses:
        '204':
          description: El pote fue quitado del pedido
        '404':
          description: No se conoce un pedido y/o pote con tal id
  /pedidos/{pedidoId}/pagar:
    post:
      description: Inicia el pago del pedido
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosDePago'
      responses:
        '202':
          description: Los datos de pago han sido recibidos y serán procesados
        '404':
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/pago:
    get:
      description: Ver el estado del pago de un pedido particular
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      responses:
        '200':
          description: Este es el estado del pago del pedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pago'
        '404':
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/asignarRepartidor/{repartidorId}:
    post:
      description: Inicia la asignación de un repartidor a un pedido determinado.
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      - $ref: '#/components/parameters/repartidorId'
      responses:
        '202':
          description: Los datos de la asignación han sido recibidos correctamente y serán procesados.
        '403':
          description: El pedido ya tiene un repartidor asignado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: El pedido ya tiene un repartidor asignado.
                  acciones:
                    type: object
                    properties:
                      verRepartidor:
                        type: string
                        example: GET /pedidos/{pedidoId}/repartidor
                      quitarRepartidor:
                        type: string
                        example: DELETE /pedidos/{pedidoId}/repartidor/{repartidorId}
                      reintentarAsignarRepartidor:
                        type: string
                        example: POST /pedidos/{pedidoId}/asignarRepartidor/{repartidorId}
        '404':
          description: No se encontró el pedido o el repartidor con tal id.
  /pedidos/{pedidoId}/repartidor:
    get:
      description: Ver el repartidor asignado a un pedido particular
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      responses:
        '200':
          description: Este es el repartidor asignado al pedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repartidor'
        '404':
          description: No se encontró el pedido o el pedido aún no tiene repartidor asignado.
  /pedidos/{pedidoId}/repartidor/{repartidorId}:
    delete:
      description: Deja al pedido sin repartidor asignado.
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      - $ref: '#/components/parameters/repartidorId'
      responses:
        '204':
          description: El repartidor fue quitado del pedido
        '404':
          description: No se encontró el pedido o el repartidor con tal id.
  /repartidores:
    get:
      description: Listar los repartidores de pedidos
      parameters:
      - in: query
        name: edadMenorA
        required: false
        schema:
          type: integer
      - in: query
        name: edadIgualA
        required: false
        schema:
          type: integer
      - in: query
        name: edadMayorA
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Estos son los repartidores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repartidor'
    post:
      description: Agregar un nuevo repartidor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosDelRepartidor'
      responses:
        '201':
          description: El repartidor ha sido agregado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repartidor'
  /repartidores/{repartidorId}:
    get:
      description: Ver un repartidor particular
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      responses:
        '200':
          description: Repartidor encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repartidor'
        '404':
          description: No se encontró un repartidor con tal id
    put:
      description: Modificar los datos de un repartidor particular
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosDelRepartidor'
      responses:
        '200':
          description: Los datos repartidor han sido actualizados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repartidor'
        '404':
          description: No se encontró un repartidor con tal id
    delete:
      description: Quitar a un repartidor
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      responses:
        '204':
          description: El repartidor fue eliminado
        '404':
          description: No se encontró un repartidor con tal id
  /repartidores/{repartidorId}/vehiculos:
    get:
      description: Listar los vehículos de un repartidor
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      - in: query
        name: tipo
        required: false
        schema:
          $ref: '#/components/schemas/TipoDeVehiculo'
      responses:
        '200':
          description: Estos son los vehículos del repartidor
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Automovil'
                    - $ref: '#/components/schemas/Bicicleta'
                    - $ref: '#/components/schemas/Motocicleta'
        '404':
          description: No se encontró un repartidor con tal id
    post:
      description: Agregar un vehículo al repartidor
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Automovil'
                - $ref: '#/components/schemas/Bicicleta'
                - $ref: '#/components/schemas/Motocicleta'
      responses:
        '201':
          description: El vehículo ha sido agregado al repartidor
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Automovil'
                  - $ref: '#/components/schemas/Bicicleta'
                  - $ref: '#/components/schemas/Motocicleta'
        '404':
          description: No se encontró un repartidor con tal id
  /repartidores/{repartidorId}/vehiculos/{vehiculoId}:
    get:
      description: Ver un vehículo particular de un repartidor
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      - $ref: '#/components/parameters/vehiculoId'
      responses:
        '200':
          description: Vehículo encontrado
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Automovil'
                  - $ref: '#/components/schemas/Bicicleta'
                  - $ref: '#/components/schemas/Motocicleta'
        '404':
          description: No se encontró un repartidor y/o vehículo con tal id
    put:
      description: Modificar los datos de un vehículo particular de un repartidor
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      - $ref: '#/components/parameters/vehiculoId'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Automovil'
                - $ref: '#/components/schemas/Bicicleta'
                - $ref: '#/components/schemas/Motocicleta'
      responses:
        '200':
          description: Los datos del vehículo han sido actualizados
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Automovil'
                  - $ref: '#/components/schemas/Bicicleta'
                  - $ref: '#/components/schemas/Motocicleta'
        '404':
          description: No se encontró un repartidor y/o vehículo con tal id
    delete:
      description: Quitar un vehículo de un repartidor
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      - $ref: '#/components/parameters/vehiculoId'
      responses:
        '204':
          description: El vehículo fue quitado del repartidor
        '404':
          description: No se encontró un repartidor y/o vehículo con tal id
components:
  parameters:
    gustoId:
      name: gustoId
      in: path
      description: id del gusto
      required: true
      schema:
        type: string
    pedidoId:
      name: pedidoId
      in: path
      description: id del pedido
      required: true
      schema:
        type: integer
    poteId:
      name: poteId
      in: path
      description: id del pote
      required: true
      schema:
        type: integer
    repartidorId:
      name: repartidorId
      in: path
      description: id del repartidor
      required: true
      schema:
        type: integer
    vehiculoId:
      name: vehiculoId
      in: path
      description: id del vehículo
      required: true
      schema:
        type: integer
  schemas:
    TipoDeGusto:
      description: categoría de gustos de helado
      type: string
      enum:
        - chocolates
        - dulce de leches
        - cremas
        - frutas
      example: dulce de leches
    Gusto:
      description: un gusto de helado
      type: object
      properties:
        id:
          type: string
          description: nombre corto que identifica este gusto
          example: ddl
        nombre:
          type: string
          description: nombre legible por humanos para este gusto
          example: Dulce de leche
        tipo:
          $ref: '#/components/schemas/TipoDeGusto'
      required: [id, nombre, tipo]
    Pedido:
      description: un pedido de helados
      type: object
      properties:
        id:
          type: integer
          description: identificador de este pedido
          example: 22
        direccion_entrega:
          type: string
          description: dirección en la que se ha de entregar este pedido
          example: Lavalleja 244 4C, CABA
      required: [id, direccion_entrega]
    PesoDePote:
      description: peso de un pote de helado en gramos
      type: string
      enum:
        - "1000"
        - "500"
        - "250"
      example: "500"
    Pote:
      description: un pote de helado dentro de un pedido
      type: object
      properties:
        id:
          type: integer
          description: identificador de este pote dentro del pedido
          example: 1
        peso:
          $ref: '#/components/schemas/PesoDePote'
        gustos:
          type: array
          items:
            type: string
          description: los gustos de helado en este pote
          example: [ddl, pist]
      required: [id, peso, gustos]
    DatosDePago:
      description: los datos necesarios para iniciar el pago de un pedido
      type: object
      discriminator:
        propertyName: tipoDePago
      properties:
        tipoDePago:
          type: string
          description: se usa para determinar el tipo de pago a usar
      required: [tipoDePago]
    DatosDePagoBilleteraVirtual:
      description: datos de pago cuando se usa una billetera virtual
      allOf:
      - $ref: '#/components/schemas/DatosDePago'
      - type: object
        properties:
          alias:
            type: string
            description: nombre de usuario o alias de la billetera a utilizar
            example: mi.cuenta.billetera
        required: [alias]
    DatosDePagoTarjeta:
      description: datos de pago cuando se usa tarjeta de crédito
      allOf:
      - $ref: '#/components/schemas/DatosDePago'
      - type: object
        properties:
          numerosTarjeta:
            type: string
            description: los 15 o 16 números de la tarjeta de crédito
            example: "1234567812345678"
          vencimientoTarjetaMes:
            type: number
            format: int8
            minimum: 1
            maximum: 6
            description: el mes del vencimiento de la tarjeta de crédito
            example: 4
          vencimientoTarjetaAnio:
            type: number
            format: int8
            minimum: 0
            maximum: 99
            description: el año de vencimiento de la tarjeta expresado en dos dígitos
            example: 24
        required: [numerosTarjeta, vencimientoTarjetaMes, vencimientoTarjetaAnio]
    Pago:
      description: estado del pago de un pedido
      type: object
      properties:
        status:
          type: string
          enum:
            - pendiente de pago
            - pago en proceso
            - pago aceptado
            - pago fallado
          example: pago aceptado
      required: [status]
    DatosDelRepartidor:
      description: datos de un repartidor de pedidos
      type: object
      properties:
        nombre:
          type: string
          description: nombre del repartidor
          example: Claudio
        apellido:
          type: string
          description: apellido del repartidor
          example: Righetti
        cuil:
          type: integer
          description: codigo de identificación tributaria del repartidor
          example: 20333444449
        fecha_nacimiento:
          type: integer
          description: fecha de nacimiento del repartidor, en formato YYYY-MM-DD
          example: 1969-12-31
      required: [nombre, apellido, cuil, fecha_nacimiento]
    Repartidor:
      description: un repartidor de pedidos
      type: object
      properties:
        id:
          type: integer
          description: identificador de este repartidor
          example: 22
        nombre:
          type: string
          description: nombre del repartidor
          example: Claudio
        apellido:
          type: string
          description: apellido del repartidor
          example: Righetti
        cuil:
          type: integer
          description: codigo de identificación tributaria del repartidor
          example: 20333444449
        edad:
            type: integer
            description: edad del repartidor
            example: 65
      required: [id, nombre, apellido, cuil, edad]
    TipoDeVehiculo:
      description: categoría de vechículos de reparto
      type: string
      enum:
        - auto
        - bici
        - moto
      example: moto
    Vehiculo:
      description: un vehículo de un repartidor
      type: object
      properties:
        id:
          type: integer
          description: identificador de este vehículo
          example: 1
        tipo:
          $ref: '#/components/schemas/TipoDeVehiculo'
      required: [id, tipo]
    Automovil:
      description: un auto de reparto
      allOf:
      - $ref: '#/components/schemas/Vehiculo'
      - type: object
        properties:
          patente:
            type: string
            description: patente del auto
            example: AG-450-AA, otro ejemplo ABC123
        required: [patente]
    Bicicleta:
      description: una bicileta
      allOf:
      - $ref: '#/components/schemas/Vehiculo'
      - type: object
        properties:
          rodado:
            type: string
            description: rodado de la bicicleta
            example: rodado 29
        required: [rodado]
    Motocicleta:
      description: una moto
      allOf:
      - $ref: '#/components/schemas/Vehiculo'
      - type: object
        properties:
          patente:
            type: string
            description: patente de la motocicleta
            example: A12-3BCD
        required: [patente]